<launch>
    <param name="/enable_statistics" value="true"/>
    <arg name="sim_case" default="1"/>
    <arg name="init_wps" default="$(find knowledge_server)/config/Initial_WPs.csv"/>
    <arg name="compressed" default="False"/>
    <arg name="logging" default="False"/>
    <arg name="visualize" default="False"/>
    <arg name="vehicle" default="iris"/>
    <arg name="gui" default="True"/>
    <arg name="filename" default="case_$(arg sim_case)_pc"/>

    <!-- Stuff for the sitl -->
    <include file="$(find aruco_client)/launch/word2vec_barebones.launch">
        <arg name="sim_case" value="$(arg sim_case)"/>
        <!-- <arg name="compressed" value="$(arg compressed)"/> -->
        <arg name="gui" value="$(arg gui)"/>
    </include>

    <node pkg="aruco_client" type="wp_node" name="wp_node" output="screen"/>
    <!-- The Knowledgebase shwizzle -->
    <group ns="knowledgebase">
        <rosparam command="load" file="$(find knowledge_server)/config/parameters.yaml"/>
        <node pkg="knowledge_server" name="detection" type="word2vec_detection_reduced.py" output="screen"/>
        <node pkg="knowledge_server" name="tf_server" type="register_tf_server_reduced.py" output="screen"/>
        <node pkg="knowledge_server" name="cam_tf" type="cam_points_transform.py" output="screen"/>
        <node pkg="knowledge_server" name="map_server" type="word2vec_mapping.py" output="screen"/>
        <node pkg="knowledge_server" name="navigator" type="word2vec_navigation.py" output="screen" args="$(arg init_wps)"/>
    </group>

    <!-- 3. Marker Detection from Kye - includes all the default configs -->
	 <include file="$(find ml_detector)/launch/marker_detect.launch">
        <arg name="image_topic" value="/$(arg vehicle)/usb_cam/image_raw"/>
        <arg name="camera_info_topic" value="/$(arg vehicle)/usb_cam/camera_info"/>
        <arg name="compressed" value="$(arg compressed)"/>
     </include>

      <!-- Stuff for the profiler -->
    <include file="$(find rosprofiler)/launch/host_profiler.launch">
        <arg name="sim_case" value="$(arg sim_case)"/>
        <arg name="logging" value="$(arg logging)"/>
        <arg name="filename" value="$(arg filename)"/>
    </include>

    <!-- 5. Shutdown file - listening to ensure shutdown happens -->
    <node pkg="rosprofiler" name="shutdown" type="shutdown.py" output="screen" required="true"/>

    <!-- 6. Displaying if imaging is supported -->
    <node if="$(arg visualize)" type="rviz" name="rviz" pkg="rviz" args="-d $(find aruco_client)/config/rviz_config.rviz" />
    <node if="$(arg visualize)" name="image_viewer" pkg="image_view" type="image_view" output="screen">
        <remap from="image" to="/ml_detector/image_overlay"/>
    </node>


</launch>